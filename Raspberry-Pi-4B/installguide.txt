Raspberry Pi 4B Edge Node Setup Guide
1. Hardware Preparation:
Raspberry Pi 4B (2GB/4GB/8GB RAM model)
Quality Power Supply: 5.1V/3A USB-C power adapter
Storage: 16GB+ Class 10 microSD card
Cooling: Heatsink + fan combo
Network: Ethernet cable or stable WiFi connection
2. OS Installation:
# Download Raspberry Pi OS Lite (64-bit)
wget https://downloads.raspberrypi.org/raspios_lite_arm64/images/raspios_lite_arm64-2023-05-03/2023-05-03-raspios-bullseye-arm64-lite.img.xz
# Flash to microSD (replace sdX with your device)
unxz 2023-05-03-raspios-bullseye-arm64-lite.img.xz
sudo dd if=2023-05-03-raspios-bullseye-arm64-lite.img of=/dev/sdX bs=4M status=progress conv=fsync
3. First Boot Configuration:
# Enable SSH and configure WiFi (before first boot)
touch /mnt/sdX/boot/ssh  # Enable SSH

# Configure WiFi
cat > /mnt/sdX/boot/wpa_supplicant.conf <<EOF
country=US
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
network={
    ssid="YOUR_NETWORK"
    psk="YOUR_PASSWORD"
    key_mgmt=WPA-PSK
}
EOF
4. Initial Setup (After Boot):
# Login (default: pi/raspberry)
sudo raspi-config
# Recommended settings:
# 1. System Options -> Change Password
# 2. System Options -> Wireless LAN -> Set country
# 3. Interface Options -> SSH -> Enable
# 4. Performance Options -> Overclock -> High (2000MHz)
# 5. Advanced Options -> Memory Split -> 128 (for GPU)
# 6. Localisation Options -> Set timezone
5. System Optimization:
# Update system
sudo apt update && sudo apt full-upgrade -y

# Install essential packages
sudo apt install -y \
    htop \
    git \
    python3-pip \
    python3-venv \
    libopenblas-dev \
    libatlas-base-dev \
    libjpeg-dev \
    cmake \
    build-essential

# Configure swap space
sudo sed -i 's/CONF_SWAPSIZE=100/CONF_SWAPSIZE=1024/' /etc/dphys-swapfile
sudo systemctl restart dphys-swapfile

# Optimize filesystem
sudo sed -i 's/defaults,noatime/defaults,noatime,discard/' /etc/fstab
sudo tune2fs -o discard /dev/mmcblk0p2

# Disable unnecessary services
sudo systemctl disable bluetooth.service
sudo systemctl disable hciuart.service
sudo systemctl disable avahi-daemon.service
sudo systemctl disable triggerhappy.service

# Set CPU governor to performance
echo "GOVERNOR=performance" | sudo tee /etc/default/cpufrequtils
sudo systemctl restart cpufrequtils

# Reboot to apply changes
sudo reboot
6. Python Environment Setup:
# Create project directory
mkdir ~/fl-edge && cd ~/fl-edge

# Create virtual environment
python3 -m venv .venv
source .venv/bin/activate
# Install optimized PyTorch for ARM64
pip install --upgrade pip wheel setuptools
pip install -U numpy==1.24.3
# Install PyTorch with ARM optimizations
pip install torch==2.0.1 torchvision==0.15.2 -f https://torch.kmtea.eu/whl/stable.html
# Install other dependencies
pip install \
    scikit-learn \
    matplotlib \
    psutil \
    fedml==0.8.4a4
7. Hardware Monitoring Setup:
# Install temperature monitoring utility
sudo apt install -y lm-sensors

# Configure temperature monitoring
sudo sensors-detect --auto
sudo systemctl enable sensord
sudo systemctl start sensord

# Create monitoring script
cat > ~/monitor.sh <<EOF
#!/bin/bash
while true; do
    clear
    echo "===== Raspberry Pi 4B Edge Node Monitor ====="
    echo "CPU Temp: \$(vcgencmd measure_temp | cut -d= -f2)"
    echo "CPU Freq: \$(vcgencmd measure_clock arm | awk -F= '{printf \"%.0f MHz\", \$2/1000000}')"
    echo "Voltage:  \$(vcgencmd measure_volts | cut -d= -f2)"
    echo "Memory:   \$(free -m | awk '/Mem/{printf \"%s/%s MB (%.1f%%)\", \$3, \$2, \$3*100/\$2}')"
    echo "Disk:     \$(df -h / | awk 'NR==2{printf \"%s/%s (%s)\", \$3, \$2, \$5}')"
    echo "=============================================="
    sleep 2
done
EOF

chmod +x ~/monitor.sh
8. Federated Learning Test:
fl_test.py
9. Auto-start Setup (Optional):
# Create systemd service for FL client
cat | sudo tee /etc/systemd/system/fl-edge.service <<EOF
[Unit]
Description=Federated Learning Edge Node
After=network.target

[Service]
User=pi
WorkingDirectory=/home/pi/fl-edge
ExecStart=/home/pi/fl-edge/.venv/bin/python /home/pi/fl-edge/fl_client.py
Restart=always
RestartSec=10s

[Install]
WantedBy=multi-user.target
EOF

# Enable service
sudo systemctl daemon-reload
sudo systemctl enable fl-edge.service
10. Verification Steps:
# Run hardware monitor
./monitor.sh

# Test PyTorch installation
source ~/fl-edge/.venv/bin/activate
python fl_test.py

# Expected output:
"""
Raspberry Pi 4B Edge Node Ready
Device Info: {'cpu_temp': 47.23, 'model': 'Raspberry Pi 4 Model B Rev 1.4'}
PyTorch Tensor: tensor([[0.1234, 0.5678, 0.9012], ...])
PyTorch Version: 2.0.1
CUDA Available: False
Matrix Multiplication (1000x1000): 1.2345 seconds
"""

# Stress test (monitor temperature)
sudo apt install -y stress-ng
stress-ng --cpu 4 --timeout 5m